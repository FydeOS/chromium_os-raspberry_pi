Index: kernel-rpi-6_1/drivers/gpu/drm/vc4/vc4_hdmi.h
===================================================================
--- kernel-rpi-6_1.orig/drivers/gpu/drm/vc4/vc4_hdmi.h
+++ kernel-rpi-6_1/drivers/gpu/drm/vc4/vc4_hdmi.h
@@ -7,6 +7,8 @@
 #include <sound/dmaengine_pcm.h>
 #include <sound/hdmi-codec.h>
 #include <sound/soc.h>
+#include <sound/hdmi-codec.h>
+#include <sound/jack.h>
 
 #include "vc4_drv.h"
 
@@ -266,6 +268,8 @@ struct vc4_hdmi {
 	 * ALSA jack detection.
 	 */
 	struct snd_soc_jack hdmi_jack;
+  struct snd_soc_jack_pin hdmi_jack_pin;
+  enum drm_connector_status last_connector_result;
 };
 
 #define connector_to_vc4_hdmi(_connector)				\
Index: kernel-rpi-6_1/drivers/gpu/drm/vc4/vc4_hdmi.c
===================================================================
--- kernel-rpi-6_1.orig/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ kernel-rpi-6_1/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -123,6 +123,12 @@ static const char * const output_format_
 	[VC4_HDMI_OUTPUT_YUV444]	= "YUV 4:4:4",
 };
 
+static void handle_plugged_change(struct vc4_hdmi *hdmi, bool plugged)
+{
+	if (hdmi->plugged_cb && hdmi->codec_dev)
+		hdmi->plugged_cb(hdmi->codec_dev, plugged);
+}
+
 static const char *vc4_hdmi_output_fmt_str(enum vc4_hdmi_output_format fmt)
 {
 	if (fmt >= ARRAY_SIZE(output_format_str))
@@ -461,6 +467,11 @@ static void vc4_hdmi_handle_hotplug(stru
 
 	if (!edid)
 		return;
+  if (status != vc4_hdmi->last_connector_result) {
+    dev_dbg(&vc4_hdmi->pdev->dev, "vc4 hdmi connector status:%d", status);
+    handle_plugged_change(vc4_hdmi, status == connector_status_connected);
+    vc4_hdmi->last_connector_result = status;
+  }
 
 	cec_s_phys_addr_from_edid(vc4_hdmi->cec_adap, edid);
 	kfree(edid);
@@ -1926,7 +1937,7 @@ static void vc4_hdmi_encoder_post_crtc_e
 	spin_lock_irqsave(&vc4_hdmi->hw_lock, flags);
 
 	HDMI_WRITE(HDMI_VID_CTL,
-	   (HDMI_READ(HDMI_VID_CTL) &~ 
+	   (HDMI_READ(HDMI_VID_CTL) &~
 	   (VC4_HD_VID_CTL_VSYNC_LOW | VC4_HD_VID_CTL_HSYNC_LOW)) |
 	   VC4_HD_VID_CTL_ENABLE |
 	   VC4_HD_VID_CTL_CLRRGB |
@@ -2780,10 +2791,12 @@ static int vc4_hdmi_audio_hook_plugged_c
 					   struct device *codec_dev)
 {
 	struct vc4_hdmi *vc4_hdmi = dev_get_drvdata(dev);
-
+  bool plugged;
 	mutex_lock(&vc4_hdmi->update_plugged_status_lock);
 	vc4_hdmi->plugged_cb = fn;
 	vc4_hdmi->codec_dev = codec_dev;
+  plugged = vc4_hdmi->last_connector_result == connector_status_connected;
+  handle_plugged_change(vc4_hdmi, plugged);
 	mutex_unlock(&vc4_hdmi->update_plugged_status_lock);
 
 	return 0;
@@ -2827,6 +2840,28 @@ static int vc4_hdmi_codec_init(struct sn
 	return snd_soc_component_set_jack(component, &vc4_hdmi->hdmi_jack, NULL);
 }
 
+static const struct snd_soc_dapm_widget vc4_hdmi_widgets[] = {
+  SND_SOC_DAPM_LINE("HDMI Jack", NULL),
+};
+
+static int vc4_hdmi_link_init(struct snd_soc_pcm_runtime *runtime) {
+  struct snd_soc_card *card = runtime->card;
+  struct snd_soc_dai *codec_dai = asoc_rtd_to_codec(runtime, 0);
+  struct snd_soc_component *component = codec_dai->component;
+  struct vc4_hdmi *vc4_hdmi = snd_soc_card_get_drvdata(card);
+  int ret;
+  vc4_hdmi->hdmi_jack_pin.pin = "HDMI Jack";
+  vc4_hdmi->hdmi_jack_pin.mask = SND_JACK_LINEOUT;
+  ret = snd_soc_card_jack_new_pins(card, "HDMI Jack", SND_JACK_LINEOUT,
+                              &vc4_hdmi->hdmi_jack, &vc4_hdmi->hdmi_jack_pin, 1);
+  if (ret) {
+    dev_err(card->dev, "Can't new HDMI Jack %d\n", ret);
+    return ret;
+  }
+  DRM_DEBUG("%s, card:%s short name:%s components:%s\n", __func__, card->name, card->topology_shortname, card->components);
+  return snd_soc_component_set_jack(component, &vc4_hdmi->hdmi_jack, NULL);
+}
+
 static int vc4_hdmi_audio_init(struct vc4_hdmi *vc4_hdmi)
 {
 	const struct vc4_hdmi_register *mai_data =
@@ -2940,6 +2975,7 @@ static int vc4_hdmi_audio_init(struct vc
 	dai_link->cpus		= &vc4_hdmi->audio.cpu;
 	dai_link->codecs	= &vc4_hdmi->audio.codec;
 	dai_link->platforms	= &vc4_hdmi->audio.platform;
+  dai_link->init = vc4_hdmi_link_init;
 
 	dai_link->num_cpus	= 1;
 	dai_link->num_codecs	= 1;
@@ -2960,6 +2996,8 @@ static int vc4_hdmi_audio_init(struct vc
 	card->driver_name = "vc4-hdmi";
 	card->dev = dev;
 	card->owner = THIS_MODULE;
+  card->dapm_widgets = vc4_hdmi_widgets;
+  card->num_dapm_widgets = ARRAY_SIZE(vc4_hdmi_widgets);
 
 	/*
 	 * Be careful, snd_soc_register_card() calls dev_set_drvdata() and
