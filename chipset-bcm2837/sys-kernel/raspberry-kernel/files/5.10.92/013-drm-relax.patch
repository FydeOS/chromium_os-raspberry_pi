Index: kernel-rpi/drivers/gpu/drm/drm_drv.c
===================================================================
--- kernel-rpi.orig/drivers/gpu/drm/drm_drv.c
+++ kernel-rpi/drivers/gpu/drm/drm_drv.c
@@ -1026,6 +1026,8 @@ out:
 	return err;
 }
 
+bool drm_master_relax;
+
 static const struct file_operations drm_stub_fops = {
 	.owner = THIS_MODULE,
 	.open = drm_stub_open,
@@ -1056,6 +1058,12 @@ static int __init drm_core_init(void)
 
 	drm_debugfs_root = debugfs_create_dir("dri", NULL);
 
+  if (!debugfs_create_bool("drm_master_relax", S_IRUSR | S_IWUSR,
+        drm_debugfs_root, &drm_master_relax)) {
+    DRM_ERROR(
+        "Cannot create /sys/kernel/debug/dri/drm_master_relax\n");
+  }
+
 	ret = register_chrdev(DRM_MAJOR, "drm", &drm_stub_fops);
 	if (ret < 0)
 		goto error;
Index: kernel-rpi/include/drm/drm_drv.h
===================================================================
--- kernel-rpi.orig/include/drm/drm_drv.h
+++ kernel-rpi/include/drm/drm_drv.h
@@ -591,6 +591,8 @@ struct drm_driver {
 void *__devm_drm_dev_alloc(struct device *parent, struct drm_driver *driver,
 			   size_t size, size_t offset);
 
+extern bool drm_master_relax;
+
 /**
  * devm_drm_dev_alloc - Resource managed allocation of a &drm_device instance
  * @parent: Parent device object
Index: kernel-rpi/drivers/gpu/drm/drm_auth.c
===================================================================
--- kernel-rpi.orig/drivers/gpu/drm/drm_auth.c
+++ kernel-rpi/drivers/gpu/drm/drm_auth.c
@@ -205,7 +205,7 @@ static int drm_new_set_master(struct drm
 static int
 drm_master_check_perm(struct drm_device *dev, struct drm_file *file_priv)
 {
-	if (file_priv->pid == task_pid(current) && file_priv->was_master)
+	if ((drm_master_relax || file_priv->pid == task_pid(current)) && file_priv->was_master)
 		return 0;
 
 	if (!capable(CAP_SYS_ADMIN))
