CHROMEOS_KERNEL_CONFIG="/mnt/host/source/src/overlays/overlay-rpi4/kconfig/kernel-5_10_arm64_def-r96-r2"
CHROMEOS_KERNEL_ARCH="arm64"
#CHROMEOS_KERNEL_CONFIG="/mnt/host/source/src/overlays/overlay-rpi4/kconfig/kernel-5_4_arm_def"
#CHROMEOS_KERNEL_ARCH="arm"
#LOADADDR=0x8000

# Turn on the video cards this board uses.
VIDEO_CARDS="vc4 v3d"
#VIDEO_CARDS="v3d"
#ARM_FPU="neon-fp-armv8"
#ARM_FPU="neon-vfpv4"
#ARCH_TUNE="-O2 -march=armv8-a+crc+simd -mtune=cortex-a72 -mfpu=${ARM_FPU} -mfloat-abi=hard -ftree-vectorize i-fomit-frame-pointer"
#ARCH_TUNE="-O2 -march=armv8-a -mtune=cortex-a53 -mfpu=${ARM_FPU} -mfloat-abi=hard"
BOARD_COMPILER_FLAGS="-march=armv8-a+crc -mtune=cortex-a72 -mfpu=neon-fp-armv8 -mfloat-abi=hard"
BOARD_RUSTFLAGS="-Ctarget-feature=+armv8-a,+crc"
#ARCH_TUNE="-O2 -march=armv7-a -mtune=cortex-a53 -mfpu=${ARM_FPU} -mfloat-abi=hard"
USE="${USE} direncryption chromeless_tests ac_only -ml_service ime"
USE="${USE} transparent_hugepage"

#fyde_extension is a flag to help chrome to do some shell staff be compatible with chrome from fyde only"
#USE="${USE} fyde_extension"
USE="${USE} kvm_host nacl -os_install_service"
USE="${USE} libcamera"
USE="${USE} -crosvm-wl-dmabuf crosvm-gpu"
USE="${USE} -tpm tpm2_simulator tpm2 -vtpm_proxy tpm2_simulator_manufacturer disable_explicit_dma_fences"
USE="${USE} unibuild has_chromeos_config_bsp"
CHROME_DEV_FLAGS="${CHROME_DEV_FLAGS} --disable-features=CrostiniUseDlc"

#uncomment nextline to use kiosk demo
#USE="${USE} kiosk_demo"
#USE="${USE} cros_embedded"
#uncomment nextline to use wayland in crostini
#USE="${USE} crosvm-gpu"
#CROS_BOARDS="rpi4"

#Use chromium source code from git@github.com:FydeOS/chromium-raspberry_pi.git
CHROME_ORIGIN=LOCAL_SOURCE

#TTY_CONSOLE="ttyS0"
